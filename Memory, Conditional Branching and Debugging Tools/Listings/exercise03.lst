


ARM Macro Assembler    Page 1 CMPE Exercise03


    1 00000000                 TTL              CMPE Exercise03
    2 00000000         ;*******************************************************
                       *********
    3 00000000         ;Descriptive comment header goes here.
    4 00000000         ;Computes arithmetic operations using memory and branchi
                       ng
    5 00000000         ;Name:  Dhruv Rajpurohit
    6 00000000         ;Date:  23 January 2020
    7 00000000         ;Class:  CMPE-250
    8 00000000         ;Section: 01L1, Thursday, 2pm to 3:50pm
    9 00000000         ;-------------------------------------------------------
                       --------
   10 00000000         ;Keil Simulator Template for KL46
   11 00000000         ;R. W. Melton
   12 00000000         ;January 5, 2018
   13 00000000         ;*******************************************************
                       *********
   14 00000000         ;Assembler directives
   15 00000000                 THUMB
   17 00000000         ;*******************************************************
                       *********
   18 00000000         ;EQUates
   19 00000000         ;Standard data masks
   20 00000000 000000FF 
                       BYTE_MASK
                               EQU              0xFF
   21 00000000 0000000F 
                       NIBBLE_MASK
                               EQU              0x0F
   22 00000000         ;Standard data sizes (in bits)
   23 00000000 00000008 
                       BYTE_BITS
                               EQU              8
   24 00000000 00000004 
                       NIBBLE_BITS
                               EQU              4
   25 00000000         ;Architecture data sizes (in bytes)
   26 00000000 00000004 
                       WORD_SIZE
                               EQU              4           ;Cortex-M0+
   27 00000000 00000002 
                       HALFWORD_SIZE
                               EQU              2           ;Cortex-M0+
   28 00000000         ;Architecture data masks
   29 00000000 0000FFFF 
                       HALFWORD_MASK
                               EQU              0xFFFF
   30 00000000         ;Return                 
   31 00000000 00000001 
                       RET_ADDR_T_MASK
                               EQU              1           ;Bit 0 of ret. addr
                                                            . must be
   32 00000000         ;set for BX, BLX, or POP
   33 00000000         ;mask in thumb mode
   34 00000000         ;-------------------------------------------------------
                       --------
   35 00000000         ;Vectors
   36 00000000 000000C0 
                       VECTOR_TABLE_SIZE



ARM Macro Assembler    Page 2 CMPE Exercise03


                               EQU              0x000000C0  ;KL46
   37 00000000 00000004 
                       VECTOR_SIZE
                               EQU              4           ;Bytes per vector
   38 00000000         ;-------------------------------------------------------
                       --------
   39 00000000         ;CPU CONTROL:  Control register
   40 00000000         ;31-2:(reserved)
   41 00000000         ;   1:SPSEL=current stack pointer select
   42 00000000         ;           0=MSP (main stack pointer) (reset value)
   43 00000000         ;           1=PSP (process stack pointer)
   44 00000000         ;   0:nPRIV=not privileged
   45 00000000         ;        0=privileged (Freescale/NXP "supervisor") (rese
                       t value)
   46 00000000         ;        1=not privileged (Freescale/NXP "user")
   47 00000000 00000002 
                       CONTROL_SPSEL_MASK
                               EQU              2
   48 00000000 00000001 
                       CONTROL_SPSEL_SHIFT
                               EQU              1
   49 00000000 00000001 
                       CONTROL_nPRIV_MASK
                               EQU              1
   50 00000000 00000000 
                       CONTROL_nPRIV_SHIFT
                               EQU              0
   51 00000000         ;-------------------------------------------------------
                       --------
   52 00000000         ;CPU PRIMASK:  Interrupt mask register
   53 00000000         ;31-1:(reserved)
   54 00000000         ;   0:PM=prioritizable interrupt mask:
   55 00000000         ;        0=all interrupts unmasked (reset value)
   56 00000000         ;          (value after CPSIE I instruction)
   57 00000000         ;        1=prioritizable interrrupts masked
   58 00000000         ;          (value after CPSID I instruction)
   59 00000000 00000001 
                       PRIMASK_PM_MASK
                               EQU              1
   60 00000000 00000000 
                       PRIMASK_PM_SHIFT
                               EQU              0
   61 00000000         ;-------------------------------------------------------
                       --------
   62 00000000         ;CPU PSR:  Program status register
   63 00000000         ;Combined APSR, EPSR, and IPSR
   64 00000000         ;-------------------------------------------------------
                       ---
   65 00000000         ;CPU APSR:  Application Program Status Register
   66 00000000         ;31  :N=negative flag
   67 00000000         ;30  :Z=zero flag
   68 00000000         ;29  :C=carry flag
   69 00000000         ;28  :V=overflow flag
   70 00000000         ;27-0:(reserved)
   71 00000000 F0000000 
                       APSR_MASK
                               EQU              0xF0000000
   72 00000000 0000001C 
                       APSR_SHIFT



ARM Macro Assembler    Page 3 CMPE Exercise03


                               EQU              28
   73 00000000 80000000 
                       APSR_N_MASK
                               EQU              0x80000000
   74 00000000 0000001F 
                       APSR_N_SHIFT
                               EQU              31
   75 00000000 40000000 
                       APSR_Z_MASK
                               EQU              0x40000000
   76 00000000 0000001E 
                       APSR_Z_SHIFT
                               EQU              30
   77 00000000 20000000 
                       APSR_C_MASK
                               EQU              0x20000000
   78 00000000 0000001D 
                       APSR_C_SHIFT
                               EQU              29
   79 00000000 10000000 
                       APSR_V_MASK
                               EQU              0x10000000
   80 00000000 0000001C 
                       APSR_V_SHIFT
                               EQU              28
   81 00000000         ;-------------------------------------------------------
                       ---
   82 00000000         ;CPU EPSR
   83 00000000         ;31-25:(reserved)
   84 00000000         ;   24:T=Thumb state bit
   85 00000000         ;23- 0:(reserved)
   86 00000000 01000000 
                       EPSR_MASK
                               EQU              0x01000000
   87 00000000 00000018 
                       EPSR_SHIFT
                               EQU              24
   88 00000000 01000000 
                       EPSR_T_MASK
                               EQU              0x01000000
   89 00000000 00000018 
                       EPSR_T_SHIFT
                               EQU              24
   90 00000000         ;-------------------------------------------------------
                       ---
   91 00000000         ;CPU IPSR
   92 00000000         ;31-6:(reserved)
   93 00000000         ; 5-0:Exception number=number of current exception
   94 00000000         ;      0=thread mode
   95 00000000         ;      1:(reserved)
   96 00000000         ;      2=NMI
   97 00000000         ;      3=hard fault
   98 00000000         ;      4-10:(reserved)
   99 00000000         ;     11=SVCall
  100 00000000         ;     12-13:(reserved)
  101 00000000         ;     14=PendSV
  102 00000000         ;     15=SysTick
  103 00000000         ;     16=IRQ0
  104 00000000         ;     16-47:IRQ(Exception number - 16)



ARM Macro Assembler    Page 4 CMPE Exercise03


  105 00000000         ;     47=IRQ31
  106 00000000         ;     48-63:(reserved)
  107 00000000 0000003F 
                       IPSR_MASK
                               EQU              0x0000003F
  108 00000000 00000000 
                       IPSR_SHIFT
                               EQU              0
  109 00000000 0000003F 
                       IPSR_EXCEPTION_MASK
                               EQU              0x0000003F
  110 00000000 00000000 
                       IPSR_EXCEPTION_SHIFT
                               EQU              0
  111 00000000         ;-------------------------------------------------------
                       ---
  112 00000000 80000000 
                       PSR_N_MASK
                               EQU              APSR_N_MASK
  113 00000000 0000001F 
                       PSR_N_SHIFT
                               EQU              APSR_N_SHIFT
  114 00000000 40000000 
                       PSR_Z_MASK
                               EQU              APSR_Z_MASK
  115 00000000 0000001E 
                       PSR_Z_SHIFT
                               EQU              APSR_Z_SHIFT
  116 00000000 20000000 
                       PSR_C_MASK
                               EQU              APSR_C_MASK
  117 00000000 0000001D 
                       PSR_C_SHIFT
                               EQU              APSR_C_SHIFT
  118 00000000 10000000 
                       PSR_V_MASK
                               EQU              APSR_V_MASK
  119 00000000 0000001C 
                       PSR_V_SHIFT
                               EQU              APSR_V_SHIFT
  120 00000000 01000000 
                       PSR_T_MASK
                               EQU              EPSR_T_MASK
  121 00000000 00000018 
                       PSR_T_SHIFT
                               EQU              EPSR_T_SHIFT
  122 00000000 0000003F 
                       PSR_EXCEPTION_MASK
                               EQU              IPSR_EXCEPTION_MASK
  123 00000000 00000000 
                       PSR_EXCEPTION_SHIFT
                               EQU              IPSR_EXCEPTION_SHIFT
  124 00000000 00000001 
                       MUL2    EQU              1
  125 00000000 00000002 
                       MUL4    EQU              2
  126 00000000 0000007F 
                       NUMBER1 EQU              127
  127 00000000 00000080 



ARM Macro Assembler    Page 5 CMPE Exercise03


                       NUMBER2 EQU              128
  128 00000000         ;-------------------------------------------------------
                       ---
  129 00000000         ;Stack
  130 00000000 00000100 
                       SSTACK_SIZE
                               EQU              0x00000100
  131 00000000         ;*******************************************************
                       *********
  132 00000000         ;Program
  133 00000000         ;Linker requires Reset_Handler
  134 00000000                 AREA             MyCode,CODE,READONLY
  135 00000000                 ENTRY
  136 00000000                 EXPORT           Reset_Handler
  137 00000000         Reset_Handler
                               PROC             {}
  138 00000000         main
  139 00000000         ;-------------------------------------------------------
                       --------
  140 00000000         ;Initialize registers R0-R12
  141 00000000 F7FF FFFE       BL               RegInit
  142 00000004         ;>>>>> begin main program code <<<<<
  143 00000004         ; Loading registers P and Q
  144 00000004 4935            LDR              R1,=P
  145 00000006 6809            LDR              R1,[R1,#0]
  146 00000008 4A35            LDR              R2,=Q
  147 0000000A 6812            LDR              R2,[R2,#0]
  148 0000000C         ;R3<- P
  149 0000000C 000B            MOVS             R3,R1
  150 0000000E 267F            MOVS             R6,#NUMBER1
  151 00000010 42B3            CMP              R3,R6
  152 00000012 DC1C            BGT              overflowF1
  153 00000014 2780            MOVS             R7,#NUMBER2
  154 00000016 42FB            CMN              R3,R7
  155 00000018 DB19            BLT              overflowF1
  156 0000001A E7FF            B                moveF1
  157 0000001C         
  158 0000001C         moveF1
  159 0000001C         
  160 0000001C         
  161 0000001C         ;R3<- P + 3*Q
  162 0000001C 0054            LSLS             R4,R2,#MUL2 ;2*Q
  163 0000001E 42B4            CMP              R4,R6
  164 00000020 DC16            BGT              overflowF2
  165 00000022 42FC            CMN              R4,R7
  166 00000024 DB14            BLT              overflowF2
  167 00000026 18A4            ADDS             R4,R4,R2    ;3*Q
  168 00000028 42B4            CMP              R4,R6
  169 0000002A DC11            BGT              overflowF2
  170 0000002C 42FC            CMN              R4,R7
  171 0000002E DB0F            BLT              overflowF2
  172 00000030 E7FF            B                moveF2
  173 00000032         moveF2
  174 00000032 190B            ADDS             R3,R1,R4    ;P + 3*Q
  175 00000034 42B3            CMP              R3,R6
  176 00000036 DC0C            BGT              overflowF3
  177 00000038 42FB            CMN              R3,R7
  178 0000003A DB0A            BLT              overflowF3
  179 0000003C E7FF            B                moveF3



ARM Macro Assembler    Page 6 CMPE Exercise03


  180 0000003E         moveF3
  181 0000003E         ;R3<- P + 3*Q + 65
  182 0000003E 4C29            LDR              R4,=const_F
  183 00000040 6824            LDR              R4,[R4,#0]
  184 00000042 191B            ADDS             R3,R3,R4    ;P + 3*Q + 65
  185 00000044 42B3            CMP              R3,R6
  186 00000046 DC05            BGT              overflowF4
  187 00000048 42FB            CMN              R3,R7
  188 0000004A DB03            BLT              overflowF4
  189 0000004C E003            B                moveF4
  190 0000004E         
  191 0000004E         overflowF1
  192 0000004E 1ADB            SUBS             R3,R3,R3
  193 00000050         overflowF2
  194 00000050 1B24            SUBS             R4,R4,R4
  195 00000052         overflowF3
  196 00000052 1ADB            SUBS             R3,R3,R3
  197 00000054         overflowF4
  198 00000054 1ADB            SUBS             R3,R3,R3
  199 00000056         moveF4
  200 00000056 4824            LDR              R0,=F
  201 00000058 6003            STR              R3,[R0,#0]
  202 0000005A         ;Calculating G Value
  203 0000005A         ;R5<- 3*P
  204 0000005A 004D            LSLS             R5,R1,#MUL2 ;2*P
  205 0000005C 186D            ADDS             R5,R5,R1    ;3*P
  206 0000005E 42B5            CMP              R5,R6
  207 00000060 DC13            BGT              overflowG1
  208 00000062 42FD            CMN              R5,R7
  209 00000064 DB11            BLT              overflowG1
  210 00000066 E7FF            B                moveG1
  211 00000068         moveG1
  212 00000068         ;R5<- 3*P - 2*Q
  213 00000068 0054            LSLS             R4,R2,#MUL2 ; 2*Q
  214 0000006A 42B4            CMP              R4,R6
  215 0000006C DC0E            BGT              overflowG2
  216 0000006E 42FC            CMN              R4,R7
  217 00000070 DB0C            BLT              overflowG2
  218 00000072 E7FF            B                moveG2
  219 00000074         moveG2
  220 00000074         ;R5<- 3*P - 2*Q + 12 
  221 00000074 062D            LSLS             R5,R5,#24
  222 00000076 0624            LSLS             R4,R4,#24
  223 00000078 1B2D            SUBS             R5,R5,R4    ;3*P - 2*Q@(MSB)
  224 0000007A D608            BVS              overflowG3
  225 0000007C E7FF            B                moveG3
  226 0000007E         moveG3
  227 0000007E         ;R5<- 3*P - 2*Q + 12
  228 0000007E 481B            LDR              R0,=const_G
  229 00000080 6800            LDR              R0,[R0,#0]
  230 00000082 0600            LSLS             R0,R0,#24
  231 00000084 182D            ADDS             R5,R5,R0    ;3*P - 2*Q + 12
  232 00000086 D603            BVS              overflowG4
  233 00000088 E003            B                moveG4
  234 0000008A         
  235 0000008A         overflowG1
  236 0000008A 1B6D            SUBS             R5,R5,R5
  237 0000008C         overflowG2
  238 0000008C 1B24            SUBS             R4,R4,R4



ARM Macro Assembler    Page 7 CMPE Exercise03


  239 0000008E         overflowG3
  240 0000008E 1B6D            SUBS             R5,R5,R5
  241 00000090         overflowG4
  242 00000090 1B6D            SUBS             R5,R5,R5
  243 00000092         moveG4
  244 00000092 162D            ASRS             R5,R5,#24
  245 00000094 4916            LDR              R1,=G
  246 00000096 600D            STR              R5,[R1,#0]
  247 00000098         
  248 00000098         ;Result<- F + G
  249 00000098 195F            ADDS             R7,R3,R5    ; Result = F + G
  250 0000009A BF00            NOP
  251 0000009C 2F7F            CMP              R7,#127
  252 0000009E DC02            BGT              overflowresult
  253 000000A0 2180            MOVS             R1,#128
  254 000000A2 42CF            CMN              R7,R1
  255 000000A4 E000            B                moveresult
  256 000000A6         overflowresult
  257 000000A6 1BFF            SUBS             R7,R7,R7
  258 000000A8         moveresult
  259 000000A8 4A12            LDR              R2,=Result
  260 000000AA 6017            STR              R7,[R2,#0]
  261 000000AC         ;>>>>>   end main program code <<<<<
  262 000000AC         ;Stay here
  263 000000AC E7FE            B                .
  264 000000AE                 ENDP
  265 000000AE         ;-------------------------------------------------------
                       --------
  266 000000AE         RegInit PROC             {}
  267 000000AE         ;*******************************************************
                       *********
  268 000000AE         ;Initializes register n to value 0xnnnnnnnn, for n in 
  269 000000AE         ;{0x0-0xC,0xE}
  270 000000AE         ;*******************************************************
                       *********
  271 000000AE         ;Put return on stack
  272 000000AE B500            PUSH             {LR}
  273 000000B0         ;Initialize registers
  274 000000B0 4911            LDR              R1,=0x11111111
  275 000000B2 184A            ADDS             R2,R1,R1
  276 000000B4 1853            ADDS             R3,R2,R1
  277 000000B6 185C            ADDS             R4,R3,R1
  278 000000B8 1865            ADDS             R5,R4,R1
  279 000000BA 186E            ADDS             R6,R5,R1
  280 000000BC 1877            ADDS             R7,R6,R1
  281 000000BE 1878            ADDS             R0,R7,R1
  282 000000C0 4680            MOV              R8,R0
  283 000000C2 1840            ADDS             R0,R0,R1
  284 000000C4 4681            MOV              R9,R0
  285 000000C6 1840            ADDS             R0,R0,R1
  286 000000C8 4682            MOV              R10,R0
  287 000000CA 1840            ADDS             R0,R0,R1
  288 000000CC 4683            MOV              R11,R0
  289 000000CE 1840            ADDS             R0,R0,R1
  290 000000D0 4684            MOV              R12,R0
  291 000000D2 1840            ADDS             R0,R0,R1
  292 000000D4 1840            ADDS             R0,R0,R1
  293 000000D6 4686            MOV              R14,R0
  294 000000D8 2000            MOVS             R0,#0



ARM Macro Assembler    Page 8 CMPE Exercise03


  295 000000DA BD00            POP              {PC}
  296 000000DC                 ENDP
  297 000000DC         ;-------------------------------------------------------
                       --------
  298 000000DC         ;>>>>> begin subroutine code <<<<<
  299 000000DC         ;>>>>>   end subroutine code <<<<<
  300 000000DC                 ALIGN
  301 000000DC         ;*******************************************************
                       *********
  302 000000DC         ;Vector Table Mapped to Address 0 at Reset
  303 000000DC         ;Linker requires __Vectors to be exported
  304 000000DC 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              11111111         AREA             RESET, DATA, READONLY
  305 00000000                 EXPORT           __Vectors
  306 00000000                 EXPORT           __Vectors_End
  307 00000000                 EXPORT           __Vectors_Size
  308 00000000         __Vectors
  309 00000000         ;ARM core vectors
  310 00000000 00000000        DCD              __initial_sp ;00:end of stack
  311 00000004 00000000        DCD              Reset_Handler ;reset vector
  312 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 9 CMPE Exercise03


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               SPACE            (VECTOR_TABLE_SIZE - (2 * VECTO
R_SIZE))
  313 000000C0         __Vectors_End
  314 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  315 000000C0                 ALIGN
  316 000000C0         ;*******************************************************
                       *********
  317 000000C0         ;Constants
  318 000000C0                 AREA             MyConst,DATA,READONLY
  319 00000000         ;>>>>> begin constants here <<<<<
  320 00000000 00000041 
                       const_F DCD              65
  321 00000004 0000000C 
                       const_G DCD              12
  322 00000008         ;>>>>>   end constants here <<<<<
  323 00000008         ;*******************************************************
                       *********
  324 00000008                 AREA             |.ARM.__at_0x1FFFE000|,DATA,REA
DWRITE,ALIGN=3
  325 00000000                 EXPORT           __initial_sp
  326 00000000         ;Allocate system stack
  327 00000000                 IF               :LNOT::DEF:SSTACK_SIZE
  329                          ENDIF
  330 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 10 CMPE Exercise03


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 11 CMPE Exercise03


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       Stack_Mem
                               SPACE            SSTACK_SIZE
  331 00000100         __initial_sp
  332 00000100         ;*******************************************************
                       *********
  333 00000100         ;Variables
  334 00000100                 AREA             MyData,DATA,READWRITE
  335 00000000         ;>>>>> begin variables here <<<<<
  336 00000000 00 00 00 
              00       P       SPACE            4
  337 00000004 00 00 00 
              00       Q       SPACE            4
  338 00000008 00 00 00 
              00       F       SPACE            4
  339 0000000C 00 00 00 
              00       G       SPACE            4
  340 00000010 00 00 00 
              00       Result  SPACE            4
  341 00000014         ;>>>>>   end variables here <<<<<
  342 00000014                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=inter
work --depend=.\objects\exercise03.d -o.\objects\exercise03.o -I.\RTE\_Target_1
 -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.14.0\Device\Include -IC:\Keil_v5
\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION S
ETA 524" --predefine="MKL46Z256xxx4 SETA 1" --list=.\listings\exercise03.lst Ex
ercise03.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyCode 00000000

Symbol: MyCode
   Definitions
      At line 134 in file Exercise03.s
   Uses
      None
Comment: MyCode unused
RegInit 000000AE

Symbol: RegInit
   Definitions
      At line 266 in file Exercise03.s
   Uses
      At line 141 in file Exercise03.s
Comment: RegInit used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 137 in file Exercise03.s
   Uses
      At line 136 in file Exercise03.s
      At line 311 in file Exercise03.s

main 00000000

Symbol: main
   Definitions
      At line 138 in file Exercise03.s
   Uses
      None
Comment: main unused
moveF1 0000001C

Symbol: moveF1
   Definitions
      At line 158 in file Exercise03.s
   Uses
      At line 156 in file Exercise03.s
Comment: moveF1 used once
moveF2 00000032

Symbol: moveF2
   Definitions
      At line 173 in file Exercise03.s
   Uses
      At line 172 in file Exercise03.s
Comment: moveF2 used once
moveF3 0000003E

Symbol: moveF3
   Definitions
      At line 180 in file Exercise03.s
   Uses
      At line 179 in file Exercise03.s
Comment: moveF3 used once
moveF4 00000056




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: moveF4
   Definitions
      At line 199 in file Exercise03.s
   Uses
      At line 189 in file Exercise03.s
Comment: moveF4 used once
moveG1 00000068

Symbol: moveG1
   Definitions
      At line 211 in file Exercise03.s
   Uses
      At line 210 in file Exercise03.s
Comment: moveG1 used once
moveG2 00000074

Symbol: moveG2
   Definitions
      At line 219 in file Exercise03.s
   Uses
      At line 218 in file Exercise03.s
Comment: moveG2 used once
moveG3 0000007E

Symbol: moveG3
   Definitions
      At line 226 in file Exercise03.s
   Uses
      At line 225 in file Exercise03.s
Comment: moveG3 used once
moveG4 00000092

Symbol: moveG4
   Definitions
      At line 243 in file Exercise03.s
   Uses
      At line 233 in file Exercise03.s
Comment: moveG4 used once
moveresult 000000A8

Symbol: moveresult
   Definitions
      At line 258 in file Exercise03.s
   Uses
      At line 255 in file Exercise03.s
Comment: moveresult used once
overflowF1 0000004E

Symbol: overflowF1
   Definitions
      At line 191 in file Exercise03.s
   Uses
      At line 152 in file Exercise03.s
      At line 155 in file Exercise03.s

overflowF2 00000050

Symbol: overflowF2
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 193 in file Exercise03.s
   Uses
      At line 164 in file Exercise03.s
      At line 166 in file Exercise03.s
      At line 169 in file Exercise03.s
      At line 171 in file Exercise03.s

overflowF3 00000052

Symbol: overflowF3
   Definitions
      At line 195 in file Exercise03.s
   Uses
      At line 176 in file Exercise03.s
      At line 178 in file Exercise03.s

overflowF4 00000054

Symbol: overflowF4
   Definitions
      At line 197 in file Exercise03.s
   Uses
      At line 186 in file Exercise03.s
      At line 188 in file Exercise03.s

overflowG1 0000008A

Symbol: overflowG1
   Definitions
      At line 235 in file Exercise03.s
   Uses
      At line 207 in file Exercise03.s
      At line 209 in file Exercise03.s

overflowG2 0000008C

Symbol: overflowG2
   Definitions
      At line 237 in file Exercise03.s
   Uses
      At line 215 in file Exercise03.s
      At line 217 in file Exercise03.s

overflowG3 0000008E

Symbol: overflowG3
   Definitions
      At line 239 in file Exercise03.s
   Uses
      At line 224 in file Exercise03.s
Comment: overflowG3 used once
overflowG4 00000090

Symbol: overflowG4
   Definitions
      At line 241 in file Exercise03.s
   Uses
      At line 232 in file Exercise03.s
Comment: overflowG4 used once



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

overflowresult 000000A6

Symbol: overflowresult
   Definitions
      At line 256 in file Exercise03.s
   Uses
      At line 252 in file Exercise03.s
Comment: overflowresult used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 304 in file Exercise03.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 308 in file Exercise03.s
   Uses
      At line 305 in file Exercise03.s
      At line 314 in file Exercise03.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 313 in file Exercise03.s
   Uses
      At line 306 in file Exercise03.s
      At line 314 in file Exercise03.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyConst 00000000

Symbol: MyConst
   Definitions
      At line 318 in file Exercise03.s
   Uses
      None
Comment: MyConst unused
const_F 00000000

Symbol: const_F
   Definitions
      At line 320 in file Exercise03.s
   Uses
      At line 182 in file Exercise03.s
Comment: const_F used once
const_G 00000004

Symbol: const_G
   Definitions
      At line 321 in file Exercise03.s
   Uses
      At line 228 in file Exercise03.s
Comment: const_G used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x1FFFE000 00000000

Symbol: .ARM.__at_0x1FFFE000
   Definitions
      At line 324 in file Exercise03.s
   Uses
      None
Comment: .ARM.__at_0x1FFFE000 unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 330 in file Exercise03.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 331 in file Exercise03.s
   Uses
      At line 310 in file Exercise03.s
      At line 325 in file Exercise03.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

F 00000008

Symbol: F
   Definitions
      At line 338 in file Exercise03.s
   Uses
      At line 200 in file Exercise03.s
Comment: F used once
G 0000000C

Symbol: G
   Definitions
      At line 339 in file Exercise03.s
   Uses
      At line 245 in file Exercise03.s
Comment: G used once
MyData 00000000

Symbol: MyData
   Definitions
      At line 334 in file Exercise03.s
   Uses
      None
Comment: MyData unused
P 00000000

Symbol: P
   Definitions
      At line 336 in file Exercise03.s
   Uses
      At line 144 in file Exercise03.s
Comment: P used once
Q 00000004

Symbol: Q
   Definitions
      At line 337 in file Exercise03.s
   Uses
      At line 146 in file Exercise03.s
Comment: Q used once
Result 00000010

Symbol: Result
   Definitions
      At line 340 in file Exercise03.s
   Uses
      At line 259 in file Exercise03.s
Comment: Result used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

APSR_C_MASK 20000000

Symbol: APSR_C_MASK
   Definitions
      At line 77 in file Exercise03.s
   Uses
      At line 116 in file Exercise03.s
Comment: APSR_C_MASK used once
APSR_C_SHIFT 0000001D

Symbol: APSR_C_SHIFT
   Definitions
      At line 78 in file Exercise03.s
   Uses
      At line 117 in file Exercise03.s
Comment: APSR_C_SHIFT used once
APSR_MASK F0000000

Symbol: APSR_MASK
   Definitions
      At line 71 in file Exercise03.s
   Uses
      None
Comment: APSR_MASK unused
APSR_N_MASK 80000000

Symbol: APSR_N_MASK
   Definitions
      At line 73 in file Exercise03.s
   Uses
      At line 112 in file Exercise03.s
Comment: APSR_N_MASK used once
APSR_N_SHIFT 0000001F

Symbol: APSR_N_SHIFT
   Definitions
      At line 74 in file Exercise03.s
   Uses
      At line 113 in file Exercise03.s
Comment: APSR_N_SHIFT used once
APSR_SHIFT 0000001C

Symbol: APSR_SHIFT
   Definitions
      At line 72 in file Exercise03.s
   Uses
      None
Comment: APSR_SHIFT unused
APSR_V_MASK 10000000

Symbol: APSR_V_MASK
   Definitions
      At line 79 in file Exercise03.s
   Uses
      At line 118 in file Exercise03.s
Comment: APSR_V_MASK used once
APSR_V_SHIFT 0000001C

Symbol: APSR_V_SHIFT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 80 in file Exercise03.s
   Uses
      At line 119 in file Exercise03.s
Comment: APSR_V_SHIFT used once
APSR_Z_MASK 40000000

Symbol: APSR_Z_MASK
   Definitions
      At line 75 in file Exercise03.s
   Uses
      At line 114 in file Exercise03.s
Comment: APSR_Z_MASK used once
APSR_Z_SHIFT 0000001E

Symbol: APSR_Z_SHIFT
   Definitions
      At line 76 in file Exercise03.s
   Uses
      At line 115 in file Exercise03.s
Comment: APSR_Z_SHIFT used once
BYTE_BITS 00000008

Symbol: BYTE_BITS
   Definitions
      At line 23 in file Exercise03.s
   Uses
      None
Comment: BYTE_BITS unused
BYTE_MASK 000000FF

Symbol: BYTE_MASK
   Definitions
      At line 20 in file Exercise03.s
   Uses
      None
Comment: BYTE_MASK unused
CONTROL_SPSEL_MASK 00000002

Symbol: CONTROL_SPSEL_MASK
   Definitions
      At line 47 in file Exercise03.s
   Uses
      None
Comment: CONTROL_SPSEL_MASK unused
CONTROL_SPSEL_SHIFT 00000001

Symbol: CONTROL_SPSEL_SHIFT
   Definitions
      At line 48 in file Exercise03.s
   Uses
      None
Comment: CONTROL_SPSEL_SHIFT unused
CONTROL_nPRIV_MASK 00000001

Symbol: CONTROL_nPRIV_MASK
   Definitions
      At line 49 in file Exercise03.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: CONTROL_nPRIV_MASK unused
CONTROL_nPRIV_SHIFT 00000000

Symbol: CONTROL_nPRIV_SHIFT
   Definitions
      At line 50 in file Exercise03.s
   Uses
      None
Comment: CONTROL_nPRIV_SHIFT unused
EPSR_MASK 01000000

Symbol: EPSR_MASK
   Definitions
      At line 86 in file Exercise03.s
   Uses
      None
Comment: EPSR_MASK unused
EPSR_SHIFT 00000018

Symbol: EPSR_SHIFT
   Definitions
      At line 87 in file Exercise03.s
   Uses
      None
Comment: EPSR_SHIFT unused
EPSR_T_MASK 01000000

Symbol: EPSR_T_MASK
   Definitions
      At line 88 in file Exercise03.s
   Uses
      At line 120 in file Exercise03.s
Comment: EPSR_T_MASK used once
EPSR_T_SHIFT 00000018

Symbol: EPSR_T_SHIFT
   Definitions
      At line 89 in file Exercise03.s
   Uses
      At line 121 in file Exercise03.s
Comment: EPSR_T_SHIFT used once
HALFWORD_MASK 0000FFFF

Symbol: HALFWORD_MASK
   Definitions
      At line 29 in file Exercise03.s
   Uses
      None
Comment: HALFWORD_MASK unused
HALFWORD_SIZE 00000002

Symbol: HALFWORD_SIZE
   Definitions
      At line 27 in file Exercise03.s
   Uses
      None
Comment: HALFWORD_SIZE unused
IPSR_EXCEPTION_MASK 0000003F



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: IPSR_EXCEPTION_MASK
   Definitions
      At line 109 in file Exercise03.s
   Uses
      At line 122 in file Exercise03.s
Comment: IPSR_EXCEPTION_MASK used once
IPSR_EXCEPTION_SHIFT 00000000

Symbol: IPSR_EXCEPTION_SHIFT
   Definitions
      At line 110 in file Exercise03.s
   Uses
      At line 123 in file Exercise03.s
Comment: IPSR_EXCEPTION_SHIFT used once
IPSR_MASK 0000003F

Symbol: IPSR_MASK
   Definitions
      At line 107 in file Exercise03.s
   Uses
      None
Comment: IPSR_MASK unused
IPSR_SHIFT 00000000

Symbol: IPSR_SHIFT
   Definitions
      At line 108 in file Exercise03.s
   Uses
      None
Comment: IPSR_SHIFT unused
MUL2 00000001

Symbol: MUL2
   Definitions
      At line 124 in file Exercise03.s
   Uses
      At line 162 in file Exercise03.s
      At line 204 in file Exercise03.s
      At line 213 in file Exercise03.s

MUL4 00000002

Symbol: MUL4
   Definitions
      At line 125 in file Exercise03.s
   Uses
      None
Comment: MUL4 unused
NIBBLE_BITS 00000004

Symbol: NIBBLE_BITS
   Definitions
      At line 24 in file Exercise03.s
   Uses
      None
Comment: NIBBLE_BITS unused
NIBBLE_MASK 0000000F




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Symbol: NIBBLE_MASK
   Definitions
      At line 21 in file Exercise03.s
   Uses
      None
Comment: NIBBLE_MASK unused
NUMBER1 0000007F

Symbol: NUMBER1
   Definitions
      At line 126 in file Exercise03.s
   Uses
      At line 150 in file Exercise03.s
Comment: NUMBER1 used once
NUMBER2 00000080

Symbol: NUMBER2
   Definitions
      At line 127 in file Exercise03.s
   Uses
      At line 153 in file Exercise03.s
Comment: NUMBER2 used once
PRIMASK_PM_MASK 00000001

Symbol: PRIMASK_PM_MASK
   Definitions
      At line 59 in file Exercise03.s
   Uses
      None
Comment: PRIMASK_PM_MASK unused
PRIMASK_PM_SHIFT 00000000

Symbol: PRIMASK_PM_SHIFT
   Definitions
      At line 60 in file Exercise03.s
   Uses
      None
Comment: PRIMASK_PM_SHIFT unused
PSR_C_MASK 20000000

Symbol: PSR_C_MASK
   Definitions
      At line 116 in file Exercise03.s
   Uses
      None
Comment: PSR_C_MASK unused
PSR_C_SHIFT 0000001D

Symbol: PSR_C_SHIFT
   Definitions
      At line 117 in file Exercise03.s
   Uses
      None
Comment: PSR_C_SHIFT unused
PSR_EXCEPTION_MASK 0000003F

Symbol: PSR_EXCEPTION_MASK
   Definitions
      At line 122 in file Exercise03.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: PSR_EXCEPTION_MASK unused
PSR_EXCEPTION_SHIFT 00000000

Symbol: PSR_EXCEPTION_SHIFT
   Definitions
      At line 123 in file Exercise03.s
   Uses
      None
Comment: PSR_EXCEPTION_SHIFT unused
PSR_N_MASK 80000000

Symbol: PSR_N_MASK
   Definitions
      At line 112 in file Exercise03.s
   Uses
      None
Comment: PSR_N_MASK unused
PSR_N_SHIFT 0000001F

Symbol: PSR_N_SHIFT
   Definitions
      At line 113 in file Exercise03.s
   Uses
      None
Comment: PSR_N_SHIFT unused
PSR_T_MASK 01000000

Symbol: PSR_T_MASK
   Definitions
      At line 120 in file Exercise03.s
   Uses
      None
Comment: PSR_T_MASK unused
PSR_T_SHIFT 00000018

Symbol: PSR_T_SHIFT
   Definitions
      At line 121 in file Exercise03.s
   Uses
      None
Comment: PSR_T_SHIFT unused
PSR_V_MASK 10000000

Symbol: PSR_V_MASK
   Definitions
      At line 118 in file Exercise03.s
   Uses
      None
Comment: PSR_V_MASK unused
PSR_V_SHIFT 0000001C

Symbol: PSR_V_SHIFT
   Definitions
      At line 119 in file Exercise03.s
   Uses
      None
Comment: PSR_V_SHIFT unused



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

PSR_Z_MASK 40000000

Symbol: PSR_Z_MASK
   Definitions
      At line 114 in file Exercise03.s
   Uses
      None
Comment: PSR_Z_MASK unused
PSR_Z_SHIFT 0000001E

Symbol: PSR_Z_SHIFT
   Definitions
      At line 115 in file Exercise03.s
   Uses
      None
Comment: PSR_Z_SHIFT unused
RET_ADDR_T_MASK 00000001

Symbol: RET_ADDR_T_MASK
   Definitions
      At line 31 in file Exercise03.s
   Uses
      None
Comment: RET_ADDR_T_MASK unused
SSTACK_SIZE 00000100

Symbol: SSTACK_SIZE
   Definitions
      At line 130 in file Exercise03.s
   Uses
      At line 330 in file Exercise03.s
Comment: SSTACK_SIZE used once
VECTOR_SIZE 00000004

Symbol: VECTOR_SIZE
   Definitions
      At line 37 in file Exercise03.s
   Uses
      At line 312 in file Exercise03.s
Comment: VECTOR_SIZE used once
VECTOR_TABLE_SIZE 000000C0

Symbol: VECTOR_TABLE_SIZE
   Definitions
      At line 36 in file Exercise03.s
   Uses
      At line 312 in file Exercise03.s
Comment: VECTOR_TABLE_SIZE used once
WORD_SIZE 00000004

Symbol: WORD_SIZE
   Definitions
      At line 26 in file Exercise03.s
   Uses
      None
Comment: WORD_SIZE unused
__Vectors_Size 000000C0

Symbol: __Vectors_Size



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 314 in file Exercise03.s
   Uses
      At line 307 in file Exercise03.s
Comment: __Vectors_Size used once
52 symbols
424 symbols in table

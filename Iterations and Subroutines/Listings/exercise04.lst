


ARM Macro Assembler    Page 1 Program Title for Listing Header Goes Here


    1 00000000                 TTL              Program Title for Listing Header Goes Here
    2 00000000         ;****************************************************************
    3 00000000         
    4 00000000         ;Name:  <Dhruv Rajpurohit>
    5 00000000         ;Date:  <02/06/2020>
    6 00000000         ;Class:  CMPE-250
    7 00000000         ;Section:  <01L1, Thursday, 2 pm to 3:50 pm>
    8 00000000         ;---------------------------------------------------------------
    9 00000000         ;Keil Simulator Template for KL46
   10 00000000         ;R. W. Melton
   11 00000000         ;January 5, 2018
   12 00000000         ;****************************************************************
   13 00000000         ;Assembler directives
   14 00000000                 THUMB
   16 00000000         ;****************************************************************
   17 00000000         ;EQUates
   18 00000000 00000019 
                       MAX_DATA
                               EQU              25
   19 00000000         ;Standard data masks
   20 00000000 000000FF 
                       BYTE_MASK
                               EQU              0xFF
   21 00000000 0000000F 
                       NIBBLE_MASK
                               EQU              0x0F
   22 00000000         ;Standard data sizes (in bits)
   23 00000000 00000008 
                       BYTE_BITS
                               EQU              8
   24 00000000 00000004 
                       NIBBLE_BITS
                               EQU              4
   25 00000000         ;Architecture data sizes (in bytes)
   26 00000000 00000004 
                       WORD_SIZE
                               EQU              4           ;Cortex-M0+
   27 00000000 00000002 
                       HALFWORD_SIZE
                               EQU              2           ;Cortex-M0+
   28 00000000         ;Architecture data masks
   29 00000000 0000FFFF 



ARM Macro Assembler    Page 2 Program Title for Listing Header Goes Here


                       HALFWORD_MASK
                               EQU              0xFFFF
   30 00000000         ;Return                 
   31 00000000 00000001 
                       RET_ADDR_T_MASK
                               EQU              1           ;Bit 0 of ret. addr. must be
   32 00000000         ;set for BX, BLX, or POP
   33 00000000         ;mask in thumb mode
   34 00000000         ;---------------------------------------------------------------
   35 00000000         ;Vectors
   36 00000000 000000C0 
                       VECTOR_TABLE_SIZE
                               EQU              0x000000C0  ;KL46
   37 00000000 00000004 
                       VECTOR_SIZE
                               EQU              4           ;Bytes per vector
   38 00000000         ;---------------------------------------------------------------
   39 00000000         ;CPU CONTROL:  Control register
   40 00000000         ;31-2:(reserved)
   41 00000000         ;   1:SPSEL=current stack pointer select
   42 00000000         ;           0=MSP (main stack pointer) (reset value)
   43 00000000         ;           1=PSP (process stack pointer)
   44 00000000         ;   0:nPRIV=not privileged
   45 00000000         ;        0=privileged (Freescale/NXP "supervisor") (reset value)
   46 00000000         ;        1=not privileged (Freescale/NXP "user")
   47 00000000 00000002 
                       CONTROL_SPSEL_MASK
                               EQU              2
   48 00000000 00000001 
                       CONTROL_SPSEL_SHIFT
                               EQU              1
   49 00000000 00000001 
                       CONTROL_nPRIV_MASK
                               EQU              1
   50 00000000 00000000 
                       CONTROL_nPRIV_SHIFT
                               EQU              0
   51 00000000         ;---------------------------------------------------------------
   52 00000000         ;CPU PRIMASK:  Interrupt mask register
   53 00000000         ;31-1:(reserved)
   54 00000000         ;   0:PM=prioritizable interrupt mask:
   55 00000000         ;        0=all interrupts unmasked (reset value)



ARM Macro Assembler    Page 3 Program Title for Listing Header Goes Here


   56 00000000         ;          (value after CPSIE I instruction)
   57 00000000         ;        1=prioritizable interrrupts masked
   58 00000000         ;          (value after CPSID I instruction)
   59 00000000 00000001 
                       PRIMASK_PM_MASK
                               EQU              1
   60 00000000 00000000 
                       PRIMASK_PM_SHIFT
                               EQU              0
   61 00000000         ;---------------------------------------------------------------
   62 00000000         ;CPU PSR:  Program status register
   63 00000000         ;Combined APSR, EPSR, and IPSR
   64 00000000         ;----------------------------------------------------------
   65 00000000         ;CPU APSR:  Application Program Status Register
   66 00000000         ;31  :N=negative flag
   67 00000000         ;30  :Z=zero flag
   68 00000000         ;29  :C=carry flag
   69 00000000         ;28  :V=overflow flag
   70 00000000         ;27-0:(reserved)
   71 00000000 F0000000 
                       APSR_MASK
                               EQU              0xF0000000
   72 00000000 0000001C 
                       APSR_SHIFT
                               EQU              28
   73 00000000 80000000 
                       APSR_N_MASK
                               EQU              0x80000000
   74 00000000 0000001F 
                       APSR_N_SHIFT
                               EQU              31
   75 00000000 40000000 
                       APSR_Z_MASK
                               EQU              0x40000000
   76 00000000 0000001E 
                       APSR_Z_SHIFT
                               EQU              30
   77 00000000 20000000 
                       APSR_C_MASK
                               EQU              0x20000000
   78 00000000 0000001D 
                       APSR_C_SHIFT



ARM Macro Assembler    Page 4 Program Title for Listing Header Goes Here


                               EQU              29
   79 00000000 10000000 
                       APSR_V_MASK
                               EQU              0x10000000
   80 00000000 0000001C 
                       APSR_V_SHIFT
                               EQU              28
   81 00000000         ;----------------------------------------------------------
   82 00000000         ;CPU EPSR
   83 00000000         ;31-25:(reserved)
   84 00000000         ;   24:T=Thumb state bit
   85 00000000         ;23- 0:(reserved)
   86 00000000 01000000 
                       EPSR_MASK
                               EQU              0x01000000
   87 00000000 00000018 
                       EPSR_SHIFT
                               EQU              24
   88 00000000 01000000 
                       EPSR_T_MASK
                               EQU              0x01000000
   89 00000000 00000018 
                       EPSR_T_SHIFT
                               EQU              24
   90 00000000         ;----------------------------------------------------------
   91 00000000         ;CPU IPSR
   92 00000000         ;31-6:(reserved)
   93 00000000         ; 5-0:Exception number=number of current exception
   94 00000000         ;      0=thread mode
   95 00000000         ;      1:(reserved)
   96 00000000         ;      2=NMI
   97 00000000         ;      3=hard fault
   98 00000000         ;      4-10:(reserved)
   99 00000000         ;     11=SVCall
  100 00000000         ;     12-13:(reserved)
  101 00000000         ;     14=PendSV
  102 00000000         ;     15=SysTick
  103 00000000         ;     16=IRQ0
  104 00000000         ;     16-47:IRQ(Exception number - 16)
  105 00000000         ;     47=IRQ31
  106 00000000         ;     48-63:(reserved)
  107 00000000 0000003F 



ARM Macro Assembler    Page 5 Program Title for Listing Header Goes Here


                       IPSR_MASK
                               EQU              0x0000003F
  108 00000000 00000000 
                       IPSR_SHIFT
                               EQU              0
  109 00000000 0000003F 
                       IPSR_EXCEPTION_MASK
                               EQU              0x0000003F
  110 00000000 00000000 
                       IPSR_EXCEPTION_SHIFT
                               EQU              0
  111 00000000         ;----------------------------------------------------------
  112 00000000 80000000 
                       PSR_N_MASK
                               EQU              APSR_N_MASK
  113 00000000 0000001F 
                       PSR_N_SHIFT
                               EQU              APSR_N_SHIFT
  114 00000000 40000000 
                       PSR_Z_MASK
                               EQU              APSR_Z_MASK
  115 00000000 0000001E 
                       PSR_Z_SHIFT
                               EQU              APSR_Z_SHIFT
  116 00000000 20000000 
                       PSR_C_MASK
                               EQU              APSR_C_MASK
  117 00000000 0000001D 
                       PSR_C_SHIFT
                               EQU              APSR_C_SHIFT
  118 00000000 10000000 
                       PSR_V_MASK
                               EQU              APSR_V_MASK
  119 00000000 0000001C 
                       PSR_V_SHIFT
                               EQU              APSR_V_SHIFT
  120 00000000 01000000 
                       PSR_T_MASK
                               EQU              EPSR_T_MASK
  121 00000000 00000018 
                       PSR_T_SHIFT
                               EQU              EPSR_T_SHIFT



ARM Macro Assembler    Page 6 Program Title for Listing Header Goes Here


  122 00000000 0000003F 
                       PSR_EXCEPTION_MASK
                               EQU              IPSR_EXCEPTION_MASK
  123 00000000 00000000 
                       PSR_EXCEPTION_SHIFT
                               EQU              IPSR_EXCEPTION_SHIFT
  124 00000000         ;----------------------------------------------------------
  125 00000000         ;Stack
  126 00000000 00000100 
                       SSTACK_SIZE
                               EQU              0x00000100
  127 00000000         ;****************************************************************
  128 00000000         ;Program
  129 00000000         ;Linker requires Reset_Handler
  130 00000000                 AREA             MyCode,CODE,READONLY
  131 00000000                 ENTRY
  132 00000000                 EXPORT           Reset_Handler
  133 00000000                 IMPORT           InitData
  134 00000000                 IMPORT           LoadData
  135 00000000                 IMPORT           TestData
  136 00000000         Reset_Handler
                               PROC             {}
  137 00000000         main
  138 00000000         ;---------------------------------------------------------------
  139 00000000         ;Initialize registers R0-R12
  140 00000000 F7FF FFFE       BL               RegInit
  141 00000004         ;>>>>> begin main program code <<<<<
  142 00000004 F7FF FFFE       BL               InitData
  143 00000008         
  144 00000008         Main
  145 00000008 F7FF FFFE       BL               LoadData
  146 0000000C         
  147 0000000C D216            BCS              QUIT
  148 0000000E 4936            LDR              R1, =P
  149 00000010 6809            LDR              R1, [R1, #0]
  150 00000012 4836            LDR              R0, =Q
  151 00000014 6800            LDR              R0, [R0, #0]
  152 00000016 F7FF FFFE       BL               DIVU
  153 0000001A D206            BCS              WRONG
  154 0000001C 4B32            LDR              R3, =P
  155 0000001E 6019            STR              R1, [R3,#0]
  156 00000020 4C32            LDR              R4, =Q



ARM Macro Assembler    Page 7 Program Title for Listing Header Goes Here


  157 00000022 6020            STR              R0, [R4, #0]
  158 00000024         
  159 00000024 F7FF FFFE       BL               TestData
  160 00000028 E7EE            B                Main
  161 0000002A         
  162 0000002A         WRONG
  163 0000002A 482F            LDR              R0,=P
  164 0000002C 4B33            LDR              R3, =0xFFFFFFFF
  165 0000002E 6003            STR              R3, [R0, #0]
  166 00000030 492E            LDR              R1, =Q
  167 00000032 4B32            LDR              R3, =0xFFFFFFFF
  168 00000034 600B            STR              R3, [R1, #0]
  169 00000036 F7FF FFFE       BL               TestData
  170 0000003A E7E5            B                Main
  171 0000003C         
  172 0000003C         QUIT
  173 0000003C         
  174 0000003C         
  175 0000003C         ;>>>>>   end main program code <<<<<
  176 0000003C         ;Stay here
  177 0000003C E7FE            B                .
  178 0000003E                 ENDP
  179 0000003E         ;---------------------------------------------------------------
  180 0000003E         RegInit PROC             {}
  181 0000003E         ;****************************************************************
  182 0000003E         ;Initializes register n to value 0xnnnnnnnn, for n in 
  183 0000003E         ;{0x0-0xC,0xE}
  184 0000003E         ;****************************************************************
  185 0000003E         ;Put return on stack
  186 0000003E B500            PUSH             {LR}
  187 00000040         ;Initialize registers
  188 00000040 4930            LDR              R1,=0x11111111
  189 00000042 184A            ADDS             R2,R1,R1
  190 00000044 1853            ADDS             R3,R2,R1
  191 00000046 185C            ADDS             R4,R3,R1
  192 00000048 1865            ADDS             R5,R4,R1
  193 0000004A 186E            ADDS             R6,R5,R1
  194 0000004C 1877            ADDS             R7,R6,R1
  195 0000004E 1878            ADDS             R0,R7,R1
  196 00000050 4680            MOV              R8,R0
  197 00000052 1840            ADDS             R0,R0,R1
  198 00000054 4681            MOV              R9,R0



ARM Macro Assembler    Page 8 Program Title for Listing Header Goes Here


  199 00000056 1840            ADDS             R0,R0,R1
  200 00000058 4682            MOV              R10,R0
  201 0000005A 1840            ADDS             R0,R0,R1
  202 0000005C 4683            MOV              R11,R0
  203 0000005E 1840            ADDS             R0,R0,R1
  204 00000060 4684            MOV              R12,R0
  205 00000062 1840            ADDS             R0,R0,R1
  206 00000064 1840            ADDS             R0,R0,R1
  207 00000066 4686            MOV              R14,R0
  208 00000068 2000            MOVS             R0,#0
  209 0000006A BD00            POP              {PC}
  210 0000006C                 ENDP
  211 0000006C         ;---------------------------------------------------------------
  212 0000006C         ;>>>>> begin subroutine code <<<<<
  213 0000006C         
  214 0000006C         DIVU    PROC             {R3-R14}
  215 0000006C B404            PUSH             {R2}
  216 0000006E 2800            CMP              R0, #0
  217 00000070 D013            BEQ              DIV_BY_Zero
  218 00000072         
  219 00000072         
  220 00000072 2900            CMP              R1, #0
  221 00000074 D007            BEQ              SMALL_Div
  222 00000076         
  223 00000076 2200            MOVS             R2, #0
  224 00000078 4281            CMP              R1, R0
  225 0000007A D016            BEQ              Equal
  226 0000007C         
  227 0000007C 4281    SUB_LOOP
                               CMP              R1, R0
  228 0000007E D323            BLO              ENDW
  229 00000080 1A09            SUBS             R1, R1, R0
  230 00000082 1C52            ADDS             R2, R2, #1
  231 00000084 E7FA            B                SUB_LOOP
  232 00000086         
  233 00000086         SMALL_Div
  234 00000086 F3EF 8000       MRS              R0,APSR
  235 0000008A 2120            MOVS             R1,#0x20
  236 0000008C 0609            LSLS             R1,R1,#24
  237 0000008E 4388            BICS             R0,R0,R1
  238 00000090 F380 8800       MSR              APSR,R0
  239 00000094         



ARM Macro Assembler    Page 9 Program Title for Listing Header Goes Here


  240 00000094 2000            MOVS             R0, #0
  241 00000096 2100            MOVS             R1, #0
  242 00000098 E023            B                THEEND
  243 0000009A         DIV_BY_Zero
  244 0000009A         
  245 0000009A F3EF 8000       MRS              R0, APSR
  246 0000009E 2120            MOVS             R1,#0x20
  247 000000A0 0609            LSLS             R1,R1,#24
  248 000000A2 4308            ORRS             R0,R0,R1
  249 000000A4 F380 8800       MSR              APSR,R0
  250 000000A8         
  251 000000A8 E01B            B                THEEND
  252 000000AA         
  253 000000AA 1A09    Equal   SUBS             R1, R1, R0
  254 000000AC 1C52            ADDS             R2, R2, #1
  255 000000AE 4610            MOV              R0, R2
  256 000000B0 B402            PUSH             {R1}
  257 000000B2 B401            PUSH             {R0}
  258 000000B4 F3EF 8000       MRS              R0,APSR
  259 000000B8 2120            MOVS             R1,#0x20
  260 000000BA 0609            LSLS             R1,R1,#24
  261 000000BC 4388            BICS             R0,R0,R1
  262 000000BE F380 8800       MSR              APSR,R0
  263 000000C2 BC02            POP              {R1}
  264 000000C4 BC01            POP              {R0}
  265 000000C6 E00C            B                THEEND
  266 000000C8         
  267 000000C8         ENDW
  268 000000C8 4610            MOV              R0, R2
  269 000000CA B402            PUSH             {R1}
  270 000000CC B401            PUSH             {R0}
  271 000000CE F3EF 8000       MRS              R0,APSR
  272 000000D2 2120            MOVS             R1,#0x20
  273 000000D4 0609            LSLS             R1,R1,#24
  274 000000D6 4388            BICS             R0,R0,R1
  275 000000D8 F380 8800       MSR              APSR,R0
  276 000000DC BC02            POP              {R1}
  277 000000DE BC01            POP              {R0}
  278 000000E0 E7FF            B                THEEND
  279 000000E2         
  280 000000E2 BC04    THEEND  POP              {R2}
  281 000000E4 4770            BX               LR



ARM Macro Assembler    Page 10 Program Title for Listing Header Goes Here


  282 000000E6         
  283 000000E6         ;>>>>>   end subroutine code <<<<<
  284 000000E6 00 00           ALIGN
  285 000000E8         ;****************************************************************
  286 000000E8         ;Vector Table Mapped to Address 0 at Reset
  287 000000E8         ;Linker requires __Vectors to be exported
  288 000000E8 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              FFFFFFFF 
              00000000 
              11111111         AREA             RESET, DATA, READONLY
  289 00000000                 EXPORT           __Vectors
  290 00000000                 EXPORT           __Vectors_End
  291 00000000                 EXPORT           __Vectors_Size
  292 00000000         __Vectors
  293 00000000         ;ARM core vectors
  294 00000000 00000000        DCD              __initial_sp ;00:end of stack
  295 00000004 00000000        DCD              Reset_Handler ;reset vector
  296 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 11 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               SPACE            (VECTOR_TABLE_SIZE - (2 * VECTOR_SIZE))
  297 000000C0         __Vectors_End



ARM Macro Assembler    Page 12 Program Title for Listing Header Goes Here


  298 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  299 000000C0                 ALIGN
  300 000000C0         ;****************************************************************
  301 000000C0         ;Constants
  302 000000C0                 AREA             MyConst,DATA,READONLY
  303 00000000         ;>>>>> begin constants here <<<<<
  304 00000000         ;>>>>>   end constants here <<<<<
  305 00000000         ;****************************************************************
  306 00000000                 AREA             |.ARM.__at_0x1FFFE000|,DATA,READWRITE,ALIGN=3
  307 00000000                 EXPORT           __initial_sp
  308 00000000         ;Allocate system stack
  309 00000000                 IF               :LNOT::DEF:SSTACK_SIZE
  311                          ENDIF
  312 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 13 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 14 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       Stack_Mem
                               SPACE            SSTACK_SIZE
  313 00000100         __initial_sp
  314 00000100         ;****************************************************************
  315 00000100         ;Variables
  316 00000100                 AREA             MyData,DATA,READWRITE
  317 00000000                 EXPORT           P
  318 00000000                 EXPORT           Q
  319 00000000                 EXPORT           Results
  320 00000000         ;>>>>> begin variables here <<<<<
  321 00000000 00 00 00 
              00       P       SPACE            4
  322 00000004 00 00 00 
              00       Q       SPACE            4
  323 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 15 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    Results SPACE            2*MAX_DATA
  324 0000003A         ;>>>>>   end variables here <<<<<
  325 0000003A                 END
Command Line: --debug --xref --length=49 --width=120 --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=interwork --depend=.\o
bjects\exercise04.d -o.\objects\exercise04.o -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.14.0\Device
\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__UVISION_VERSION SETA 524" --predefine="MKL46Z256xxx4 SETA 1" --li
st=.\listings\exercise04.lst Exercise04.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DIVU 0000006C

Symbol: DIVU
   Definitions
      At line 214 in file Exercise04.s
   Uses
      At line 152 in file Exercise04.s
Comment: DIVU used once
DIV_BY_Zero 0000009A

Symbol: DIV_BY_Zero
   Definitions
      At line 243 in file Exercise04.s
   Uses
      At line 217 in file Exercise04.s
Comment: DIV_BY_Zero used once
ENDW 000000C8

Symbol: ENDW
   Definitions
      At line 267 in file Exercise04.s
   Uses
      At line 228 in file Exercise04.s
Comment: ENDW used once
Equal 000000AA

Symbol: Equal
   Definitions
      At line 253 in file Exercise04.s
   Uses
      At line 225 in file Exercise04.s
Comment: Equal used once
Main 00000008

Symbol: Main
   Definitions
      At line 144 in file Exercise04.s
   Uses
      At line 160 in file Exercise04.s
      At line 170 in file Exercise04.s

MyCode 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: MyCode
   Definitions
      At line 130 in file Exercise04.s
   Uses
      None
Comment: MyCode unused
QUIT 0000003C

Symbol: QUIT
   Definitions
      At line 172 in file Exercise04.s
   Uses
      At line 147 in file Exercise04.s
Comment: QUIT used once
RegInit 0000003E

Symbol: RegInit
   Definitions
      At line 180 in file Exercise04.s
   Uses
      At line 140 in file Exercise04.s
Comment: RegInit used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 136 in file Exercise04.s
   Uses
      At line 132 in file Exercise04.s
      At line 295 in file Exercise04.s

SMALL_Div 00000086

Symbol: SMALL_Div
   Definitions
      At line 233 in file Exercise04.s
   Uses
      At line 221 in file Exercise04.s
Comment: SMALL_Div used once
SUB_LOOP 0000007C




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: SUB_LOOP
   Definitions
      At line 227 in file Exercise04.s
   Uses
      At line 231 in file Exercise04.s
Comment: SUB_LOOP used once
THEEND 000000E2

Symbol: THEEND
   Definitions
      At line 280 in file Exercise04.s
   Uses
      At line 242 in file Exercise04.s
      At line 251 in file Exercise04.s
      At line 265 in file Exercise04.s
      At line 278 in file Exercise04.s

WRONG 0000002A

Symbol: WRONG
   Definitions
      At line 162 in file Exercise04.s
   Uses
      At line 153 in file Exercise04.s
Comment: WRONG used once
main 00000000

Symbol: main
   Definitions
      At line 137 in file Exercise04.s
   Uses
      None
Comment: main unused
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 288 in file Exercise04.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 292 in file Exercise04.s
   Uses
      At line 289 in file Exercise04.s
      At line 298 in file Exercise04.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 297 in file Exercise04.s
   Uses
      At line 290 in file Exercise04.s
      At line 298 in file Exercise04.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyConst 00000000

Symbol: MyConst
   Definitions
      At line 302 in file Exercise04.s
   Uses
      None
Comment: MyConst unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x1FFFE000 00000000

Symbol: .ARM.__at_0x1FFFE000
   Definitions
      At line 306 in file Exercise04.s
   Uses
      None
Comment: .ARM.__at_0x1FFFE000 unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 312 in file Exercise04.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 313 in file Exercise04.s
   Uses
      At line 294 in file Exercise04.s
      At line 307 in file Exercise04.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData 00000000

Symbol: MyData
   Definitions
      At line 316 in file Exercise04.s
   Uses
      None
Comment: MyData unused
P 00000000

Symbol: P
   Definitions
      At line 321 in file Exercise04.s
   Uses
      At line 148 in file Exercise04.s
      At line 154 in file Exercise04.s
      At line 163 in file Exercise04.s
      At line 317 in file Exercise04.s

Q 00000004

Symbol: Q
   Definitions
      At line 322 in file Exercise04.s
   Uses
      At line 150 in file Exercise04.s
      At line 156 in file Exercise04.s
      At line 166 in file Exercise04.s
      At line 318 in file Exercise04.s

Results 00000008

Symbol: Results
   Definitions
      At line 323 in file Exercise04.s
   Uses
      At line 319 in file Exercise04.s
Comment: Results used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

APSR_C_MASK 20000000

Symbol: APSR_C_MASK
   Definitions
      At line 77 in file Exercise04.s
   Uses
      At line 116 in file Exercise04.s
Comment: APSR_C_MASK used once
APSR_C_SHIFT 0000001D

Symbol: APSR_C_SHIFT
   Definitions
      At line 78 in file Exercise04.s
   Uses
      At line 117 in file Exercise04.s
Comment: APSR_C_SHIFT used once
APSR_MASK F0000000

Symbol: APSR_MASK
   Definitions
      At line 71 in file Exercise04.s
   Uses
      None
Comment: APSR_MASK unused
APSR_N_MASK 80000000

Symbol: APSR_N_MASK
   Definitions
      At line 73 in file Exercise04.s
   Uses
      At line 112 in file Exercise04.s
Comment: APSR_N_MASK used once
APSR_N_SHIFT 0000001F

Symbol: APSR_N_SHIFT
   Definitions
      At line 74 in file Exercise04.s
   Uses
      At line 113 in file Exercise04.s
Comment: APSR_N_SHIFT used once
APSR_SHIFT 0000001C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: APSR_SHIFT
   Definitions
      At line 72 in file Exercise04.s
   Uses
      None
Comment: APSR_SHIFT unused
APSR_V_MASK 10000000

Symbol: APSR_V_MASK
   Definitions
      At line 79 in file Exercise04.s
   Uses
      At line 118 in file Exercise04.s
Comment: APSR_V_MASK used once
APSR_V_SHIFT 0000001C

Symbol: APSR_V_SHIFT
   Definitions
      At line 80 in file Exercise04.s
   Uses
      At line 119 in file Exercise04.s
Comment: APSR_V_SHIFT used once
APSR_Z_MASK 40000000

Symbol: APSR_Z_MASK
   Definitions
      At line 75 in file Exercise04.s
   Uses
      At line 114 in file Exercise04.s
Comment: APSR_Z_MASK used once
APSR_Z_SHIFT 0000001E

Symbol: APSR_Z_SHIFT
   Definitions
      At line 76 in file Exercise04.s
   Uses
      At line 115 in file Exercise04.s
Comment: APSR_Z_SHIFT used once
BYTE_BITS 00000008

Symbol: BYTE_BITS
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 23 in file Exercise04.s
   Uses
      None
Comment: BYTE_BITS unused
BYTE_MASK 000000FF

Symbol: BYTE_MASK
   Definitions
      At line 20 in file Exercise04.s
   Uses
      None
Comment: BYTE_MASK unused
CONTROL_SPSEL_MASK 00000002

Symbol: CONTROL_SPSEL_MASK
   Definitions
      At line 47 in file Exercise04.s
   Uses
      None
Comment: CONTROL_SPSEL_MASK unused
CONTROL_SPSEL_SHIFT 00000001

Symbol: CONTROL_SPSEL_SHIFT
   Definitions
      At line 48 in file Exercise04.s
   Uses
      None
Comment: CONTROL_SPSEL_SHIFT unused
CONTROL_nPRIV_MASK 00000001

Symbol: CONTROL_nPRIV_MASK
   Definitions
      At line 49 in file Exercise04.s
   Uses
      None
Comment: CONTROL_nPRIV_MASK unused
CONTROL_nPRIV_SHIFT 00000000

Symbol: CONTROL_nPRIV_SHIFT
   Definitions
      At line 50 in file Exercise04.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      None
Comment: CONTROL_nPRIV_SHIFT unused
EPSR_MASK 01000000

Symbol: EPSR_MASK
   Definitions
      At line 86 in file Exercise04.s
   Uses
      None
Comment: EPSR_MASK unused
EPSR_SHIFT 00000018

Symbol: EPSR_SHIFT
   Definitions
      At line 87 in file Exercise04.s
   Uses
      None
Comment: EPSR_SHIFT unused
EPSR_T_MASK 01000000

Symbol: EPSR_T_MASK
   Definitions
      At line 88 in file Exercise04.s
   Uses
      At line 120 in file Exercise04.s
Comment: EPSR_T_MASK used once
EPSR_T_SHIFT 00000018

Symbol: EPSR_T_SHIFT
   Definitions
      At line 89 in file Exercise04.s
   Uses
      At line 121 in file Exercise04.s
Comment: EPSR_T_SHIFT used once
HALFWORD_MASK 0000FFFF

Symbol: HALFWORD_MASK
   Definitions
      At line 29 in file Exercise04.s
   Uses
      None
Comment: HALFWORD_MASK unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

HALFWORD_SIZE 00000002

Symbol: HALFWORD_SIZE
   Definitions
      At line 27 in file Exercise04.s
   Uses
      None
Comment: HALFWORD_SIZE unused
IPSR_EXCEPTION_MASK 0000003F

Symbol: IPSR_EXCEPTION_MASK
   Definitions
      At line 109 in file Exercise04.s
   Uses
      At line 122 in file Exercise04.s
Comment: IPSR_EXCEPTION_MASK used once
IPSR_EXCEPTION_SHIFT 00000000

Symbol: IPSR_EXCEPTION_SHIFT
   Definitions
      At line 110 in file Exercise04.s
   Uses
      At line 123 in file Exercise04.s
Comment: IPSR_EXCEPTION_SHIFT used once
IPSR_MASK 0000003F

Symbol: IPSR_MASK
   Definitions
      At line 107 in file Exercise04.s
   Uses
      None
Comment: IPSR_MASK unused
IPSR_SHIFT 00000000

Symbol: IPSR_SHIFT
   Definitions
      At line 108 in file Exercise04.s
   Uses
      None
Comment: IPSR_SHIFT unused
MAX_DATA 00000019




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: MAX_DATA
   Definitions
      At line 18 in file Exercise04.s
   Uses
      At line 323 in file Exercise04.s
Comment: MAX_DATA used once
NIBBLE_BITS 00000004

Symbol: NIBBLE_BITS
   Definitions
      At line 24 in file Exercise04.s
   Uses
      None
Comment: NIBBLE_BITS unused
NIBBLE_MASK 0000000F

Symbol: NIBBLE_MASK
   Definitions
      At line 21 in file Exercise04.s
   Uses
      None
Comment: NIBBLE_MASK unused
PRIMASK_PM_MASK 00000001

Symbol: PRIMASK_PM_MASK
   Definitions
      At line 59 in file Exercise04.s
   Uses
      None
Comment: PRIMASK_PM_MASK unused
PRIMASK_PM_SHIFT 00000000

Symbol: PRIMASK_PM_SHIFT
   Definitions
      At line 60 in file Exercise04.s
   Uses
      None
Comment: PRIMASK_PM_SHIFT unused
PSR_C_MASK 20000000

Symbol: PSR_C_MASK
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 116 in file Exercise04.s
   Uses
      None
Comment: PSR_C_MASK unused
PSR_C_SHIFT 0000001D

Symbol: PSR_C_SHIFT
   Definitions
      At line 117 in file Exercise04.s
   Uses
      None
Comment: PSR_C_SHIFT unused
PSR_EXCEPTION_MASK 0000003F

Symbol: PSR_EXCEPTION_MASK
   Definitions
      At line 122 in file Exercise04.s
   Uses
      None
Comment: PSR_EXCEPTION_MASK unused
PSR_EXCEPTION_SHIFT 00000000

Symbol: PSR_EXCEPTION_SHIFT
   Definitions
      At line 123 in file Exercise04.s
   Uses
      None
Comment: PSR_EXCEPTION_SHIFT unused
PSR_N_MASK 80000000

Symbol: PSR_N_MASK
   Definitions
      At line 112 in file Exercise04.s
   Uses
      None
Comment: PSR_N_MASK unused
PSR_N_SHIFT 0000001F

Symbol: PSR_N_SHIFT
   Definitions
      At line 113 in file Exercise04.s
   Uses



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      None
Comment: PSR_N_SHIFT unused
PSR_T_MASK 01000000

Symbol: PSR_T_MASK
   Definitions
      At line 120 in file Exercise04.s
   Uses
      None
Comment: PSR_T_MASK unused
PSR_T_SHIFT 00000018

Symbol: PSR_T_SHIFT
   Definitions
      At line 121 in file Exercise04.s
   Uses
      None
Comment: PSR_T_SHIFT unused
PSR_V_MASK 10000000

Symbol: PSR_V_MASK
   Definitions
      At line 118 in file Exercise04.s
   Uses
      None
Comment: PSR_V_MASK unused
PSR_V_SHIFT 0000001C

Symbol: PSR_V_SHIFT
   Definitions
      At line 119 in file Exercise04.s
   Uses
      None
Comment: PSR_V_SHIFT unused
PSR_Z_MASK 40000000

Symbol: PSR_Z_MASK
   Definitions
      At line 114 in file Exercise04.s
   Uses
      None
Comment: PSR_Z_MASK unused



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

PSR_Z_SHIFT 0000001E

Symbol: PSR_Z_SHIFT
   Definitions
      At line 115 in file Exercise04.s
   Uses
      None
Comment: PSR_Z_SHIFT unused
RET_ADDR_T_MASK 00000001

Symbol: RET_ADDR_T_MASK
   Definitions
      At line 31 in file Exercise04.s
   Uses
      None
Comment: RET_ADDR_T_MASK unused
SSTACK_SIZE 00000100

Symbol: SSTACK_SIZE
   Definitions
      At line 126 in file Exercise04.s
   Uses
      At line 312 in file Exercise04.s
Comment: SSTACK_SIZE used once
VECTOR_SIZE 00000004

Symbol: VECTOR_SIZE
   Definitions
      At line 37 in file Exercise04.s
   Uses
      At line 296 in file Exercise04.s
Comment: VECTOR_SIZE used once
VECTOR_TABLE_SIZE 000000C0

Symbol: VECTOR_TABLE_SIZE
   Definitions
      At line 36 in file Exercise04.s
   Uses
      At line 296 in file Exercise04.s
Comment: VECTOR_TABLE_SIZE used once
WORD_SIZE 00000004




ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

Symbol: WORD_SIZE
   Definitions
      At line 26 in file Exercise04.s
   Uses
      None
Comment: WORD_SIZE unused
__Vectors_Size 000000C0

Symbol: __Vectors_Size
   Definitions
      At line 298 in file Exercise04.s
   Uses
      At line 291 in file Exercise04.s
Comment: __Vectors_Size used once
49 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

InitData 00000000

Symbol: InitData
   Definitions
      At line 133 in file Exercise04.s
   Uses
      At line 142 in file Exercise04.s
Comment: InitData used once
LoadData 00000000

Symbol: LoadData
   Definitions
      At line 134 in file Exercise04.s
   Uses
      At line 145 in file Exercise04.s
Comment: LoadData used once
TestData 00000000

Symbol: TestData
   Definitions
      At line 135 in file Exercise04.s
   Uses
      At line 159 in file Exercise04.s
      At line 169 in file Exercise04.s

3 symbols
411 symbols in table
